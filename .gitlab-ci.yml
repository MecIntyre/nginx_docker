# CI/CD configurationfile for starting a pipeline on gitlab 
# Gitlab- and Runner-Environment are build as a docker-containment
# reachable over http://localhost:80

default:
  image: "python:3.9.5"

services:
  - docker:dind

stages:                # available stages in the defined direction
  - .pre
  - Linting
  - Building
  - Testing
  - Deployment

prepare:               # Delete the runner and virtual box directories for cleaning up and prevent failures
  stage: .pre
  tags:
    - host
    - ubuntu
  script:
    - rm -rf /home/gitlab-runner/builds/qEsZNt7P && rm -rf /home/gitlab-runner/VirtualBox\ VMs/nginx

before_script:         # install Python3, path-exportation and install tools from the requirements via pip3-package-installer
  - python3 --version                         
  - python3 - m venv $CI_BUILDS_DIR/venv
  - export PATH="$CI_BUILDS_DIR/venv/bin:$PATH"
  - pip3 install -r requirements.txt

flake8:                # test-stage for static code analysis which looks for style and syntax
  stage: Linting
  tags:
    - host
    - ubuntu
  script:              # rise the maximum line to 120 and ignore defined failurs
    - flake8 --max-line-length=120 --ignore=F401,E128,E902 *.py 

pylint:                # test-stage for static code analysis which looks for programm errors
  stage: Linting
  tags:
    - host
    - ubuntu
  allow_failure: true
  script:
    - pylint -d C0301 *.py

build_job:             # build-stage for set-up the virtual machine and containerization
  tags:
    - host
    - ubuntu
  stage: Building
  script:
    - echo "Machine-Building..."
    - make new
    - echo "succeeded..."

test-job:              # test-stage for testing the reachability with a small ping as example
  stage: Testing
  tags:
    - host
    - ubuntu
  script:
    - echo "Running-Testing..."
    - sleep 5
    - httping 192.168.100.100 -c2
    - echo "succeeded..."

deploy-job:              # deployment-stage for release the complete build on docker-hub (mecintyre)
  stage: Deployment
  tags:
    - host
    - ubuntu
  script:
    - echo $CI_JOB_ID
    - echo $DH_PASSWORD | docker login --username $DH_USERNAME --password-stdin
    - docker build -t $DH_USERNAME/gitlabbuild:$CI_JOB_ID .
    - docker push $DH_USERNAME/gitlabbuild:$CI_JOB_ID
  